{% extends "base.html.twig" %}

{% block content %}

    <link href="{{ asset('css/css.css') }}" rel="stylesheet">

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin="" />
    <style type="text/css">
        #map{
            width: 100%;
            height: 100vh;
            top: 0;
            left: 0;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            cursor: pointer;
            z-index: 999;
        }
    </style>

    <div id="map">
        <!-- Ici s'affichera la carte -->
    </div>
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
    <script src="https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css" />

    <script type="text/javascript">

        var macarte = null;

        // Objet pour stocker l'état des favoris des stations
        var stationFavorites = {};

        // Initialisation de l'objet stationFavorites
        {% for station in stations %}
        stationFavorites["{{ station.station_id }}"] = {{ station.isFavori ? 'true' : 'false' }};
        {% endfor %}

        function initMap() {
            // Initialisation de la carte
            macarte = L.map('map').setView([48.852969, 2.349903], 11);

            L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                minZoom: 1,
                maxZoom: 20
            }).addTo(macarte);

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(getPosition);
            }

            function getPosition(position) {
                var lat = position.coords.latitude;
                var long = position.coords.longitude;

                var marker = L.marker([lat, long]).addTo(macarte);
                marker.bindPopup("You're here!").openPopup();

                // Afficher la popup au survol
                marker.on('mouseover', function (e) {
                    this.openPopup();
                });

                macarte.setView([lat, long], 15);


                L.circle([lat, long], {
                    color: 'red',
                    fillColor: '#f03',
                    fillOpacity: 0.5,
                    radius: 50
                }).addTo(macarte);
            }

            var markers = L.markerClusterGroup({
                maxClusterRadius: 100,
                disableClusteringAtZoom: 15,
                spiderfyOnMaxZoom: true
            });



            {% for station in stations %}
            var latitude = {{ station.lat }};
            var longitude = {{ station.lon }};

            var marker = L.marker([latitude, longitude]);

            // Utilisez une fonction dans bindPopup pour générer le contenu dynamique de la popup
            marker.bindPopup(() => {
                const isFavori = stationFavorites["{{ station.station_id }}"];
                let popupContent = `<b>{{ station.name }}</b><br>
                        Capacité : {{ station.capacite }}<br>
                        Vélos mécanique : {{ station.velo_mecanique }}<br>
                        Vélos électriques : {{ station.velo_electrique }}`;

                {% if is_granted('ROLE_USER') %}
                const buttonLabel = isFavori ? 'Retirer des favoris' : 'Ajouter aux favoris';
                popupContent += `<br><button class="btn btn-warning" id="buttonFavori" data-station-id="{{ station.station_id }}" onclick="addToFavorites('{{ station.station_id }}', {{ station.name|json_encode() }})">${buttonLabel}</button>`;
                {% endif %}

                return popupContent;
            });

            // Afficher la popup au survol
            marker.on('mouseover', function (e) {
                this.openPopup();
            });

            markers.addLayer(marker);
            {% endfor %}

            macarte.addLayer(markers);


            // Ajout d'un contrôle de recentrage en utilisant la fonction getPosition
            var locateControl = L.control({position: 'topleft'}); // Création d'un contrôle personnalisé placé en haut à gauche
            console.log(locateControl); // Affichage dans la console pour vérifier la création du contrôle

            // Fonction qui sera appelée lorsque le contrôle est ajouté à la carte
            locateControl.onAdd = function (map) {
                // Création d'une div qui servira de conteneur pour le bouton de recentrage
                var div = L.DomUtil.create('div', 'leaflet-bar leaflet-control leaflet-control-custom');

                // Insertion du bouton avec une image (icône de localisation) dans la div
                div.innerHTML = '<button style="width: 30px; height: 30px; padding: 0; background: none; border: none; cursor: pointer;">' +
                    '<img src="/images/pointeur-de-localisation.png" alt="Recentrer" style="width: 80%; height: 80%;" />' +
                    '</button>';

                // Style du conteneur pour le bouton
                div.style.backgroundColor = 'white';
                div.style.cursor = 'pointer';

                // Ajout de l'événement de clic pour recentrer sur la géolocalisation de l'utilisateur
                div.onclick = function () {
                    // Vérifie si le navigateur supporte la géolocalisation
                    if (navigator.geolocation) {
                        // Si supportée, demande la position actuelle de l'utilisateur
                        navigator.geolocation.getCurrentPosition(
                            getPosition, // Fonction appelée si la géolocalisation est réussie
                            function (error) { // Fonction de gestion des erreurs si la géolocalisation échoue
                                // Vérification du type d'erreur pour afficher un message approprié
                                if (error.code === error.PERMISSION_DENIED) {
                                    // L'utilisateur a refusé l'autorisation d'accès à sa localisation
                                    alert("La géolocalisation a été refusée. Veuillez autoriser l'accès pour utiliser cette fonctionnalité.");
                                } else if (error.code === error.POSITION_UNAVAILABLE) {
                                    // La position n'est pas disponible (problème avec le GPS, par exemple)
                                    alert("La position est actuellement indisponible.");
                                } else if (error.code === error.TIMEOUT) {
                                    // La demande de géolocalisation a expiré
                                    alert("La demande de géolocalisation a expiré. Veuillez réessayer.");
                                } else {
                                    // Autre erreur non spécifiée
                                    alert("Une erreur inconnue est survenue.");
                                }
                            }
                        );
                    } else {
                        // Si la géolocalisation n'est pas supportée par le navigateur
                        alert("La géolocalisation n'est pas supportée par votre navigateur.");
                    }
                };

                return div; // Retourne la div contenant le bouton pour l'ajouter à la carte
            };

            // Ajoute le contrôle de recentrage à la carte
            locateControl.addTo(macarte);
        }

        window.onload = function() {
            initMap();
        };
    </script>

    <script src="{{ asset('js/favoriMap.js') }}"></script>
{% endblock %}
